using System;
using UnityEngine;
using UnityEngine.InputSystem;

namespace StellarMass.InputManagement.MapInstances
{
    ///<summary>
    /// This class was automatically generated by InputManagerScriptGenerator.
    ///</summary>
    [Serializable]
    public class PauseMenu : MapInstance, InputActions.IPauseMenuActions
    {
        private InputActions.PauseMenuActions PauseMenuActions { get; }

        public event Action<InputActionPhase, Vector2> @OnNavigate;
        public event Action<InputActionPhase> @OnSubmit;
        public event Action<InputActionPhase> @OnUnpause;

        public PauseMenu(InputActions.PauseMenuActions actions)
        {
            PauseMenuActions = actions;
            ActionMap = PauseMenuActions.Get();
            AddCallbacks();
        }

        protected sealed override void AddCallbacks() => PauseMenuActions.AddCallbacks(this);
        protected sealed override void RemoveCallbacks() => PauseMenuActions.RemoveCallbacks(this);

        void InputActions.IPauseMenuActions.OnNavigate(InputAction.CallbackContext context) => OnNavigate?.Invoke(context.phase, context.ReadValue<Vector2>());
        void InputActions.IPauseMenuActions.OnSubmit(InputAction.CallbackContext context) => OnSubmit?.Invoke(context.phase);
        void InputActions.IPauseMenuActions.OnUnpause(InputAction.CallbackContext context) => OnUnpause?.Invoke(context.phase);
    }
}
